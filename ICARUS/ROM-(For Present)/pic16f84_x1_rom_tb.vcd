$date
	Sun Mar 16 17:27:09 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module pic16f84_x1_rom_tb $end
$var wire 14 ! inst [13:0] $end
$var reg 1 " nop_in $end
$var reg 13 # pc_in [12:0] $end
$var reg 1 $ q1 $end
$scope module uut $end
$var wire 1 " nop_in $end
$var wire 13 % pc_in [12:0] $end
$var wire 1 $ q1 $end
$var reg 14 & IR [13:0] $end
$var reg 16 ' addr [15:0] $end
$var reg 8 ( byte_count [7:0] $end
$var reg 8 ) char_in [7:0] $end
$var reg 4 * data [3:0] $end
$var reg 14 + inst [13:0] $end
$var reg 8 , low_byte [7:0] $end
$var reg 16 - paddr [15:0] $end
$var reg 8 . record_type [7:0] $end
$var reg 8 / upper_byte [7:0] $end
$var integer 32 0 count [31:0] $end
$var integer 32 1 fd [31:0] $end
$var integer 32 2 i [31:0] $end
$var integer 32 3 j [31:0] $end
$var integer 32 4 k [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100101 4
b0 3
b0 2
b10000000000000000000000000000011 1
b0 0
b101011 /
b1 .
b10000000000 -
b11110001 ,
bx +
b1011 *
b11111111 )
b0 (
b0 '
bx &
bx %
0$
bx #
0"
bx !
$end
#20
b0 !
b0 +
b10101111111110 &
b0 #
b0 %
1$
#40
0$
#50
1"
#60
b10101111111110 !
b10101111111110 +
bx &
b1 #
b1 %
1$
#80
0$
#90
0"
#100
b0 !
b0 +
b110000011 &
b1111111110 #
b1111111110 %
1$
#120
0$
#130
1"
#140
b110000011 !
b110000011 +
b10101111110001 &
b1111111111 #
b1111111111 %
1$
#160
0$
#180
b10101111110001 !
b10101111110001 +
bx &
b10000000000 #
b10000000000 %
1$
#200
0$
#210
0"
#220
b0 !
b0 +
b11000011111111 &
b1111110001 #
b1111110001 %
1$
#240
0$
#250
1"
#260
b11000011111111 !
b11000011111111 +
b1011010000011 &
b1111110010 #
b1111110010 %
1$
#280
0$
#290
0"
#300
b0 !
b0 +
b10000101 &
b1111110011 #
b1111110011 %
1$
#320
0$
#330
1"
#340
b10000101 !
b10000101 +
b110000110 &
b1111110100 #
b1111110100 %
1$
#360
0$
#410
